version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: admindb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: infrastructure/docker/backend.Dockerfile
    depends_on:
      postgres:
        condition: service_healthy    
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__Default: "Host=postgres;Port=5432;Database=admindb;Username=postgres;Password=postgres"
    ports:
      - "5000:5000"

  frontend:
    build:
      context: .
      dockerfile: infrastructure/docker/frontend.Dockerfile
    depends_on:
      - api
    ports:
      - "5173:80"
volumes:
    pgdata: